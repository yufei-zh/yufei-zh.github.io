<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>宇飞丶站点</title>
  <icon>https://www.gravatar.com/avatar/a5e0325c377cc4d9471baae14029dc5f</icon>
  <subtitle>明明可以靠脸吃饭,我却要努力学习.大概这是我和明明的差距吧。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-12T03:29:07.241Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>皂雨霏霏</name>
    <email>iszhaoyufei@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python安装第三方模块</title>
    <link href="http://yoursite.com/2018/11/12/python%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2018/11/12/python安装第三方模块/</id>
    <published>2018-11-12T03:18:28.522Z</published>
    <updated>2018-11-12T03:29:07.241Z</updated>
    
    <content type="html"><![CDATA[<p>python安装第三方模块有两种方式：pip安装和下载安装的方式。</p><h2 id="pip安装"><a href="#pip安装" class="headerlink" title="pip安装"></a>pip安装</h2><ol><li>windows安装python的过程中，确保勾选了pip和Add python.exe to Path选项</li><li>在命令提示符中，尝试运行pip，会有操作命令的提示。（如果没有pip使用提示，重装python并勾选pip即可）</li><li><p>以requests模块为例，requests模块以代码形式，模拟浏览器HTTP请求访问网页，并返回具体内容，是python做爬虫，实现网络信息获取的基础。</p><p> 安装具体步骤：win+R——&gt;cmd——&gt;pip install requests</p></li></ol><p><img src="https://i.imgur.com/cnrp50V.png" alt=""><br><a id="more"></a><br>提示成功安装了10月15日版本的requests模块。</p><h2 id="requests模块"><a href="#requests模块" class="headerlink" title="requests模块"></a>requests模块</h2><p>利用requests模块请求百度首页内容<br>import requests<br>response = requests.get(“<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">http://www.baidu.com&quot;</a>)<br>response.encoding = “utf-8”<br>result = response.text<br>print(result)</p><p><img src="https://i.imgur.com/Os1yZBu.png" alt=""></p><h2 id="模块下载安装"><a href="#模块下载安装" class="headerlink" title="模块下载安装"></a>模块下载安装</h2><ol><li>下载代码，例：requests的下载地址 <a href="https://pypi.org/project/requests/#files" target="_blank" rel="noopener">https://pypi.org/project/requests/#files</a><br><img src="https://i.imgur.com/Bw7JHNu.png" alt=""></li><li>解压文件</li><li>利用cd进入解压目录</li><li>执行 python setup.py install</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python安装第三方模块有两种方式：pip安装和下载安装的方式。&lt;/p&gt;
&lt;h2 id=&quot;pip安装&quot;&gt;&lt;a href=&quot;#pip安装&quot; class=&quot;headerlink&quot; title=&quot;pip安装&quot;&gt;&lt;/a&gt;pip安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;windows安装python的过程中，确保勾选了pip和Add python.exe to Path选项&lt;/li&gt;
&lt;li&gt;在命令提示符中，尝试运行pip，会有操作命令的提示。（如果没有pip使用提示，重装python并勾选pip即可）&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以requests模块为例，requests模块以代码形式，模拟浏览器HTTP请求访问网页，并返回具体内容，是python做爬虫，实现网络信息获取的基础。&lt;/p&gt;
&lt;p&gt; 安装具体步骤：win+R——&amp;gt;cmd——&amp;gt;pip install requests&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/cnrp50V.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python、requests" scheme="http://yoursite.com/tags/python%E3%80%81requests/"/>
    
  </entry>
  
  <entry>
    <title>python数据类型练习</title>
    <link href="http://yoursite.com/2018/11/10/python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%BB%83%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/11/10/python数据类型练习/</id>
    <published>2018-11-10T03:06:08.758Z</published>
    <updated>2018-11-12T03:28:38.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id="元素分类"><a href="#元素分类" class="headerlink" title="元素分类"></a>元素分类</h2><p>有如下值集合 [11,22,33,44,55,66,77,88,99,90…]，将所有大于 66 的值保存至字典的第一个key中，将小于 66 的值保存至第二个key的值中。<br>即： {‘k1’: 大于66的所有值, ‘k2’: 小于66的所有值}</p><pre><code>li=[11,22,33,44,55,66,77,88,99,90]dic={&apos;k1&apos;:[ ],&apos;k2&apos;:[ ]}for i in li:    print(i)    if i &gt;70:        dic[&apos;k1&apos;].append(i)    else:        dic[&apos;k2&apos;].append(i)print(dic)</code></pre><a id="more"></a><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>查找列表中元素，移除每个元素的空格，并查找以 a或A开头 并且以 c 结尾的所有元素。</p><p>li = [“alec”, “ aric”, “Alex”, “Tony”, “rain”]</p><p>tu = (“alec”, “ aric”, “Alex”, “Tony”, “rain”) </p><p>dic = {‘k1’: “alex”, ‘k2’: ‘ aric’,  “k3”: “Alex”, “k4”: “Tony”}</p><pre><code>li = [&quot;alec&quot;, &quot; aric&quot;, &quot;Alex&quot;, &quot;Tony&quot;, &quot;rain&quot;]tu = (&quot;alec&quot;, &quot; aric&quot;, &quot;Alex&quot;, &quot;Tony&quot;, &quot;rain&quot;)dic = {&apos;k1&apos;: &quot;alex&quot;, &apos;k2&apos;: &apos; aric&apos;,  &quot;k3&quot;: &quot;Alex&quot;, &quot;k4&quot;: &quot;Tony&quot;}ret = []for i in li:    i = i.strip()    if i.startswith(&apos;a&apos;or&apos;A&apos;) and i.endswith(&apos;c&apos;):        ret.append(i)for i in tu:    i = i.strip()    if i.startswith(&apos;a&apos;or&apos;A&apos;) and i.endswith(&apos;c&apos;):        ret.append(i)for i in dic:    i = i.strip()    if i.startswith(&apos;a&apos;or&apos;A&apos;) and i.endswith(&apos;c&apos;):        ret.append(i)print(ret)#结果：[&apos;alec&apos;, &apos;aric&apos;, &apos;alec&apos;, &apos;aric&apos;]</code></pre><h2 id="输出商品列表，用户输入序号，显示用户选中的商品"><a href="#输出商品列表，用户输入序号，显示用户选中的商品" class="headerlink" title="输出商品列表，用户输入序号，显示用户选中的商品"></a>输出商品列表，用户输入序号，显示用户选中的商品</h2><p>商品 li = [“手机”, “电脑”, ‘鼠标垫’, ‘游艇’]</p><pre><code>li=[&quot;手机&quot;,&quot;电脑&quot;,&quot;鼠标垫&quot;,&quot;游艇&quot;]print(&quot;0是手机，1是电脑，2是鼠标垫，3是游艇&quot;)num=input(&quot;请输入数字：&quot;)if num==&apos;0&apos;:    print(li[0])elif num==&apos;1&apos;:    print(li[1])elif num==&apos;2&apos;:    print(li[2])elif num==&apos;3&apos;:    print(li[3])else:    print(&apos;&apos;)</code></pre><h2 id="购物车"><a href="#购物车" class="headerlink" title="购物车"></a>购物车</h2><p>功能要求：</p><p>要求用户输入总资产，例如：2000</p><p>显示商品列表，让用户根据序号选择商品，加入购物车</p><p>购买，如果商品总额大于总资产，提示账户余额不足，否则，购买成功。</p><p>附加：可充值、某商品移除购物车</p><pre><code>goods = [    {&quot;name&quot;: &quot;电脑&quot;, &quot;price&quot;: 1999},    {&quot;name&quot;: &quot;鼠标&quot;, &quot;price&quot;: 10},    {&quot;name&quot;: &quot;游艇&quot;, &quot;price&quot;: 20},    {&quot;name&quot;: &quot;美女&quot;, &quot;price&quot;: 998},]print(&quot;输入0购买电脑，输入1购买鼠标，输入2购买游艇，输入3购买美女，输入其他数值，结算购物车&quot;)li = []total = input(&quot;请输入总金额：&quot;)while True:    num = input(&quot;输入要购买的序号：&quot;)    if int(num) == 0:        li.append(goods[0][&apos;price&apos;])    elif int(num) == 1:        li.append(goods[1][&apos;price&apos;])    elif int(num) == 2:        li.append(goods[2][&apos;price&apos;])    elif int(num) == 3:        li.append(goods[3][&apos;price&apos;])    else:        breaksum = 0for i in li:    sum +=i    print(sum)if sum&gt;int(total):    print(&quot;余额不足&quot;)else:    print(&quot;购买成功&quot;)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;元素分类&quot;&gt;&lt;a href=&quot;#元素分类&quot; class=&quot;headerlink&quot; title=&quot;元素分类&quot;&gt;&lt;/a&gt;元素分类&lt;/h2&gt;&lt;p&gt;有如下值集合 [11,22,33,44,55,66,77,88,99,90…]，将所有大于 66 的值保存至字典的第一个key中，将小于 66 的值保存至第二个key的值中。&lt;br&gt;即： {‘k1’: 大于66的所有值, ‘k2’: 小于66的所有值}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;li=[11,22,33,44,55,66,77,88,99,90]
dic={&amp;apos;k1&amp;apos;:[ ],&amp;apos;k2&amp;apos;:[ ]}
for i in li:
    print(i)
    if i &amp;gt;70:
        dic[&amp;apos;k1&amp;apos;].append(i)
    else:
        dic[&amp;apos;k2&amp;apos;].append(i)
print(dic)
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python数据类型</title>
    <link href="http://yoursite.com/2018/11/10/python%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2018/11/10/python基本数据类型/</id>
    <published>2018-11-10T02:50:45.046Z</published>
    <updated>2018-11-12T03:28:48.964Z</updated>
    
    <content type="html"><![CDATA[<h3 id="算数运算"><a href="#算数运算" class="headerlink" title="算数运算"></a>算数运算</h3><p><a href="https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161314894-1019011109.png" target="_blank" rel="noopener">https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161314894-1019011109.png</a><br><a id="more"></a></p><h3 id="比较运算"><a href="#比较运算" class="headerlink" title="比较运算"></a>比较运算</h3><p><a href="https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161447004-894625074.png" target="_blank" rel="noopener">https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161447004-894625074.png</a></p><h3 id="赋值运算"><a href="#赋值运算" class="headerlink" title="赋值运算"></a>赋值运算</h3><p><a href="https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161703379-1489017417.png" target="_blank" rel="noopener">https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161703379-1489017417.png</a></p><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><p><a href="https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161741394-1837061851.png" target="_blank" rel="noopener">https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161741394-1837061851.png</a></p><h3 id="成员运算"><a href="#成员运算" class="headerlink" title="成员运算"></a>成员运算</h3><p><a href="https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161829426-1152133000.png" target="_blank" rel="noopener">https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161829426-1152133000.png</a></p><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><p>所有对象所具备的方法都保存在类中。对象和类的关系，举个例子：哺乳动物是类；此类下有两个对象，一个为狗、一个为猫。哺乳动物有较多的属性和方法，属性如有耳朵、有嘴巴；方法如叫、跑。那么我们在定义具体的方法的时候只需针对哺乳动物这个类进行定义即可，然后它之下的对象便自动带有了具体的属性和方法，即猫和狗虽然没有定义，但是有耳朵、嘴巴，还会跑和叫。</p><h4 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h4><p>int（整型）</p><p>　　在32位机器上，整数的位数为32位，取值范围为-2<strong>31～2</strong>31-1，即-2147483648～2147483647<br>　　在64位系统上，整数的位数为64位，取值范围为-2<strong>63～2</strong>63-1，即-9223372036854775808～9223372036854775807</p><h4 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h4><pre><code>boolean</code></pre><p>　　真或假；1或0</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>string</p><p>字符串常用功能：</p><blockquote><p>移除空白</p></blockquote><blockquote><p>分割</p></blockquote><blockquote><p>长度</p></blockquote><blockquote><p>索引</p></blockquote><blockquote><p>切片</p></blockquote><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>创建列表</p><pre><code>name_list=[&quot;zhangsan&quot;,&quot;lisi&quot;,&quot;wangwu&quot;]orname_list=list[&quot;zhangsan&quot;,&quot;lisi&quot;,&quot;wangwu&quot;]</code></pre><p>基本操作：</p><blockquote><p>索引</p></blockquote><blockquote><p>切片</p></blockquote><blockquote><p>追加</p></blockquote><blockquote><p>删除</p></blockquote><blockquote><p>长度</p></blockquote><blockquote><p>切片</p></blockquote><blockquote><p>循环</p></blockquote><blockquote><p>包含</p></blockquote><h4 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h4><p>元组的创建:</p><pre><code>ages = (11, 22, 33, 44, 55)orages = tuple((11, 22, 33, 44, 55))</code></pre><p>基本操作：</p><blockquote><p>索引</p></blockquote><blockquote><p>切片</p></blockquote><blockquote><p>循环</p></blockquote><blockquote><p>长度</p></blockquote><blockquote><p>包含</p></blockquote><h4 id="字典（无序）"><a href="#字典（无序）" class="headerlink" title="字典（无序）"></a>字典（无序）</h4><p>字典的创建：</p><pre><code>person = {&quot;name&quot;: &quot;mr.wu&quot;, &apos;age&apos;: 18}orperson = dict({&quot;name&quot;: &quot;mr.wu&quot;, &apos;age&apos;: 18})</code></pre><p>常用操作：</p><blockquote><p>索引</p></blockquote><blockquote><p>新增</p></blockquote><blockquote><p>删除</p></blockquote><blockquote><p>键、值、键值对</p></blockquote><blockquote><p>循环</p></blockquote><blockquote><p>长度</p></blockquote><h4 id="set（集合）"><a href="#set（集合）" class="headerlink" title="set（集合）"></a>set（集合）</h4><p>set是一个无序且不重复的集合。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p>用户按照顺序循环可迭代对象中的内容，</p><p>PS：break、continue</p><pre><code>li = [11,22,33,44]for item in li:    print item</code></pre><h4 id="enumrate"><a href="#enumrate" class="headerlink" title="enumrate"></a>enumrate</h4><p>为可迭代的对象添加序号<br>    li = [11,22,33]<br>    for k,v in enumerate(li, 1):<br>        print(k,v)</p><h4 id="range和xrange"><a href="#range和xrange" class="headerlink" title="range和xrange"></a>range和xrange</h4><p>指定范围，生成指定的数字。python3.0仅剩余range方法。</p><pre><code>print range(1, 10)# 结果：[1, 2, 3, 4, 5, 6, 7, 8, 9]print range(1, 10, 2)# 结果：[1, 3, 5, 7, 9]print range(30, 0, -2)# 结果：[30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2]　</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;算数运算&quot;&gt;&lt;a href=&quot;#算数运算&quot; class=&quot;headerlink&quot; title=&quot;算数运算&quot;&gt;&lt;/a&gt;算数运算&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161314894-1019011109.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180108161314894-1019011109.png&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python入门</title>
    <link href="http://yoursite.com/2018/11/10/python%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2018/11/10/python入门/</id>
    <published>2018-11-10T02:49:44.435Z</published>
    <updated>2018-11-12T03:28:44.281Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一句python代码"><a href="#第一句python代码" class="headerlink" title="第一句python代码"></a>第一句python代码</h3><p>在任意文件夹下创建 z1.py 文件（文件路径使用英文，如：“E:\work\python\usr”），内容如下：</p><pre><code>print(&quot;hello world&quot;)</code></pre><p>执行z1.py，即在cmd命令行中，输入</p><pre><code>python E:\work\python\usr\z1.py</code></pre><p>python的内部执行过程如下：<br><a id="more"></a></p><p><a href="https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180103142448659-76768380.png" target="_blank" rel="noopener">https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180103142448659-76768380.png</a></p><h3 id="内容编码"><a href="#内容编码" class="headerlink" title="内容编码"></a>内容编码</h3><p>python解释器在加载 .py 文件中的代码时，会对内容进行编码（默认ascill）</p><p>ASCII（American Standard Code for Information Interchange，美国标准信息交换代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言，其最多只能用 8 位来表示（一个字节），即：2**8 = 256，所以，ASCII码最多只能表示 256 个符号。</p><p>显然ASCII码无法将世界上的各种文字和符号全部表示，所以，就需要新出一种可以代表所有字符和符号的编码，即：Unicode。</p><p>UTF-8，是对Unicode编码的压缩和优化。</p><p>在使用python时，应该显示的告诉python解释器，用什么编码来执行源代码，即：加上头文件</p><pre><code>#!/usr/bin/env python# -*- coding: utf-8 -*-print &quot;你好，世界&quot;　</code></pre><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>　　单行注释 #内容</p><p>　　多行注释 “””内容”””　</p><h3 id="导入库的使用"><a href="#导入库的使用" class="headerlink" title="导入库的使用"></a>导入库的使用</h3><p>Python有大量的模块，从而使得开发Python程序非常简洁。类库有包括三中：</p><blockquote><p>Python内部提供的模块</p></blockquote><blockquote><p>业内开源的模块</p></blockquote><blockquote><p>程序员自己开发的模块</p></blockquote><pre><code>#!/usr/bin/env python# -*- coding: utf-8 -*-import (ku name)</code></pre><h3 id="pyc文件"><a href="#pyc文件" class="headerlink" title="pyc文件"></a>pyc文件</h3><p>执行Python代码时，如果导入了其他的 .py 文件，那么，执行过程中会自动生成一个与其同名的 .pyc 文件，该文件就是Python解释器编译之后产生的字节码。</p><p>ps：代码经过编译可以产生字节码；字节码通过反编译也可以得到代码。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h4><pre><code>#!/usr/bin/env python# -*- coding: utf-8 -*-name = &quot;zaoyufeifei&quot;age = 22</code></pre><p>上述代码声明了两个变量，变量名为： name，变量name的值为：”zaoyufeifei”；age,变量age的值为22        </p><p>变量的作用：昵称，其代指内存里某个地址中保存的内容</p><p><a href="https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180105090432159-699593039.png" target="_blank" rel="noopener">https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180105090432159-699593039.png</a></p><p>变量定义的规则：</p><blockquote><p>变量名只能是 字母、数字或下划线的任意组合</p></blockquote><blockquote><p>变量名的第一个字符不能是数字</p></blockquote><blockquote><p>以下关键字不能声明为变量名:[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]</p></blockquote><h4 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h4><pre><code>#!/usr/bin/env python# -*- coding: utf-8 -*-name1 = &quot;zaoyu&quot;name2 = &quot;feifei&quot;</code></pre><p><a href="https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180105090737299-2021506625.png" target="_blank" rel="noopener">https://images2017.cnblogs.com/blog/1296884/201801/1296884-20180105090737299-2021506625.png</a></p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><pre><code>#!/usr/bin/env python# -*- coding: utf-8 -*-# 将用户输入的内容赋值给 name 变量name = raw_input(&quot;请输入用户名：&quot;)# 打印输入的内容print name</code></pre><p>输入密码时，如果想要不可见，需要利用getpass 模块中的 getpass方法，即：</p><pre><code>#!/usr/bin/env python# -*- coding: utf-8 -*-import getpass# 将用户输入的内容赋值给 name 变量pwd = getpass.getpass(&quot;请输入密码：&quot;)# 打印输入的内容print pwd</code></pre><h3 id="流程控制和缩进"><a href="#流程控制和缩进" class="headerlink" title="流程控制和缩进"></a>流程控制和缩进</h3><h4 id="用户登录验证"><a href="#用户登录验证" class="headerlink" title="用户登录验证"></a>用户登录验证</h4><pre><code>#!/usr/bin/env python# -*- coding: encoding -*-# 提示输入用户名和密码# 验证用户名和密码#     如果错误，则输出用户名或密码错误#     如果成功，则输出 欢迎，XXX!import getpassname = raw_input(&apos;请输入用户名：&apos;)pwd = getpass.getpass(&apos;请输入密码：&apos;)if name == &quot;zaoyu&quot; and pwd == &quot;cmd&quot;:    print &quot;欢迎，zaoyu！&quot;else:    print &quot;用户名和密码错误&quot;</code></pre><h4 id="根据用户内容输出其权限"><a href="#根据用户内容输出其权限" class="headerlink" title="根据用户内容输出其权限"></a>根据用户内容输出其权限</h4><pre><code># 根据用户输入内容打印其权限# alex --&gt; 超级管理员# eric --&gt; 普通管理员# tony,rain --&gt; 业务主管# 其他 --&gt; 普通用户name = raw_input(&apos;请输入用户名：&apos;)if name == &quot;zao&quot;：    print &quot;超级管理员&quot;elif name == &quot;yu&quot;:    print &quot;普通管理员&quot;elif name == &quot;fei&quot; or name == &quot;dafei&quot;:    print &quot;业务主管&quot;else:    print &quot;普通用户&quot;</code></pre><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><h4 id="基本循环"><a href="#基本循环" class="headerlink" title="基本循环"></a>基本循环</h4><pre><code>while 条件:    # 循环体    # 如果条件为真，那么循环体则执行    # 如果条件为假，那么循环体不执行</code></pre><h4 id="break：用于退出所有循环"><a href="#break：用于退出所有循环" class="headerlink" title="break：用于退出所有循环"></a>break：用于退出所有循环</h4><pre><code>while True:    print &quot;123&quot;    break    print &quot;456&quot;</code></pre><h4 id="continue：跳出本次循环，继续下次循环"><a href="#continue：跳出本次循环，继续下次循环" class="headerlink" title="continue：跳出本次循环，继续下次循环"></a>continue：跳出本次循环，继续下次循环</h4><pre><code>while True:    print &quot;123&quot;    continue    print &quot;456&quot;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;第一句python代码&quot;&gt;&lt;a href=&quot;#第一句python代码&quot; class=&quot;headerlink&quot; title=&quot;第一句python代码&quot;&gt;&lt;/a&gt;第一句python代码&lt;/h3&gt;&lt;p&gt;在任意文件夹下创建 z1.py 文件（文件路径使用英文，如：“E:\work\python\usr”），内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print(&amp;quot;hello world&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行z1.py，即在cmd命令行中，输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python E:\work\python\usr\z1.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;python的内部执行过程如下：&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>第九届上海国际图书馆论坛</title>
    <link href="http://yoursite.com/2018/10/18/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%9B%BD%E9%99%85%E5%9B%BE%E4%B9%A6%E9%A6%86%E4%BC%9A%E8%AE%AE/"/>
    <id>http://yoursite.com/2018/10/18/第九届国际图书馆会议/</id>
    <published>2018-10-18T08:02:48.301Z</published>
    <updated>2018-11-12T03:28:25.548Z</updated>
    
    <content type="html"><![CDATA[<p>自2016年就提出，到2020年要建成智慧图书馆，智慧、包容、互联的转型阶段，智慧时代铺面而来，也正是面向全体社会化群体的。</p><h4 id="主题：图书馆，变革的驱动器"><a href="#主题：图书馆，变革的驱动器" class="headerlink" title="主题：图书馆，变革的驱动器"></a>主题：图书馆，变革的驱动器</h4><p>IFLA国际图联主席格洛莉亚致辞，战略规划包括三个内容：</p><blockquote><p>社会图书馆学，即图书馆面向社会不同阶层、不同维度所发挥的作用</p><p>信息和知识，信息到知识在人脑中的逐步变革</p></blockquote><a id="more"></a><blockquote><p>文化遗产和能力构建</p></blockquote><h4 id="智慧与包容：重塑公共图书馆新愿景"><a href="#智慧与包容：重塑公共图书馆新愿景" class="headerlink" title="智慧与包容：重塑公共图书馆新愿景"></a>智慧与包容：重塑公共图书馆新愿景</h4><p>上海图书馆陈超馆长发言，社会包容是图书馆的核心价值观，图书馆应如何顺应智慧时代。<br><img src="https://i.imgur.com/89JRs4R.png" alt=""></p><blockquote><p>艺术作品和音乐等都在人工智能时代变得可以创作，即AI带来了智慧时代，信息化新阶段：从互联网+到AI+；AI可以为图书馆赋能，图书馆的服务、业务和管理会越来越智慧。<br>AI不会替代图书馆员，不懂AI得图书馆员会被替代。</p><p>如今“弱人工智能”已经让图书馆有了基于ASRS的自动化立体书库、智能分拣系统、智能书架、自助借还系统等。未来，如果有所谓的“强人工智能”，那么总有一天图书馆将不再需要馆员做编目，智慧时代，图书馆将可能拥有真正的知识管理能力————分类编目和计算机的出现让图书馆能够比较高效的管理书籍，大数据、大容量存储、高强的计算力和AI技术以及未来将不断出现的新的信息与智能技术将使图书馆有能力直接管理知识。</p></blockquote><p>判断一个职业是否能被人工智能代替，国际上常用的方法是从三个维度进行测量。第一个维度：行业所需要的社交智慧；第二个维度：所需要的创造力；第三个维度：需要的感知和操作能力。</p><p>与AI竞争，安全的工作符合以下特点：有非常高的创意性和抽象性思维；需要高度社交智慧和谈判技巧；需要关心和与人沟通能力。</p><p>除了要充分利用AI，公共图书馆还要帮助人类应对AI带来的挑战，通过阅读提升人们的文化素养，科学素养和艺术素养，旨在培育和提升人类的创造力。科学素养指科学、技术、工程和数学。艺术素养指美育、创意和创新能力。遵循“开放包容、平等包容、普惠包容、多元包容”的理念。    </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自2016年就提出，到2020年要建成智慧图书馆，智慧、包容、互联的转型阶段，智慧时代铺面而来，也正是面向全体社会化群体的。&lt;/p&gt;
&lt;h4 id=&quot;主题：图书馆，变革的驱动器&quot;&gt;&lt;a href=&quot;#主题：图书馆，变革的驱动器&quot; class=&quot;headerlink&quot; title=&quot;主题：图书馆，变革的驱动器&quot;&gt;&lt;/a&gt;主题：图书馆，变革的驱动器&lt;/h4&gt;&lt;p&gt;IFLA国际图联主席格洛莉亚致辞，战略规划包括三个内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;社会图书馆学，即图书馆面向社会不同阶层、不同维度所发挥的作用&lt;/p&gt;
&lt;p&gt;信息和知识，信息到知识在人脑中的逐步变革&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="会议记录" scheme="http://yoursite.com/categories/%E4%BC%9A%E8%AE%AE%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="图书馆" scheme="http://yoursite.com/tags/%E5%9B%BE%E4%B9%A6%E9%A6%86/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序——页面跳转及传参</title>
    <link href="http://yoursite.com/2018/10/18/%E5%BE%AE%E4%BF%A1%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E5%8F%8A%E4%BC%A0%E5%8F%82/"/>
    <id>http://yoursite.com/2018/10/18/微信页面跳转及传参/</id>
    <published>2018-10-18T00:50:18.194Z</published>
    <updated>2018-07-26T02:20:50.336Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1532581582825&amp;di=eb7eed1f209d0047d30e82810411318e&amp;imgtype=0&amp;src=http%3A%2F%2Fwww.wykj0537.cn%2Fdata%2Fimages%2Fproduct%2F20171215142319_255.jpg" alt=""><br><a id="more"></a></p><h3 id="小程序页面跳转"><a href="#小程序页面跳转" class="headerlink" title="小程序页面跳转"></a>小程序页面跳转</h3><p>微信小程序的页面跳转依然是以传统的请求转发和请求重定向为主，tabbar的存在，有TAB页面的跳转。<br>为了微信小程序的简介方便，规定页面路径只能是十层，应尽量避免过多的交互方式。</p><h4 id="1-wx-navigateTo-OBJECT"><a href="#1-wx-navigateTo-OBJECT" class="headerlink" title="1.wx.navigateTo(OBJECT)"></a>1.wx.navigateTo(OBJECT)</h4><p>保留当前页面，跳转到应用内的某个页面，使用wx.navigateBack可以返回到原页面。</p><pre><code>wx.navigateTo({  url: &apos;test?id=1&apos;})</code></pre><p>url即目标页面，保证是非tabbar的页面的路径。路径后可以带参数，参数和路径之间用?=连接，不同参数用&amp;分开，如’path?key=value&amp;key2=value2’。需要获取页面A的参数，代入页面B中进行操作。在生命周期函数中获取option.id并转成实体，进行操作和赋值。</p><pre><code>Page({      onLoad: function(option){        console.log(option.id)      }})</code></pre><h4 id="2-wx-redirectTo-OBJECT"><a href="#2-wx-redirectTo-OBJECT" class="headerlink" title="2.wx.redirectTo(OBJECT)"></a>2.wx.redirectTo(OBJECT)</h4><p>关闭当前页面，跳转到应用内的某个页面。</p><pre><code>wx.redirectTo({  url: &apos;test?id=1&apos;})</code></pre><h4 id="3-wx-navigateBack-OBJECT"><a href="#3-wx-navigateBack-OBJECT" class="headerlink" title="3.wx.navigateBack(OBJECT)"></a>3.wx.navigateBack(OBJECT)</h4><p>关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages()) 获取当前的页面栈，决定需要返回几层。页面的跳转存储逻辑实际是一个栈队列，先入后出的形式，即逐层进入，如果返回会进入的页面先返回，因此wx.navigateBack()中转递的参数默认值为1，即退后一个页面，可以修改数值，进行多层的返回。</p><pre><code>// 注意：调用 navigateTo 跳转时，调用该方法的页面会被加入堆栈，而 redirectTo 方法则不会。见下方示例代码// 此处是A页面wx.navigateTo({  url: &apos;B?id=1&apos;})// 此处是B页面wx.navigateTo({  url: &apos;C?id=1&apos;})// 在C页面内 navigateBack，将返回A页面wx.navigateBack({  delta: 2})</code></pre><h4 id="4-wx-switchTab-OBJECT"><a href="#4-wx-switchTab-OBJECT" class="headerlink" title="4.wx.switchTab(OBJECT)"></a>4.wx.switchTab(OBJECT)</h4><p>跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面，路径只允许写在app.json中tabbar配置的页面。</p><pre><code>wx.switchTab({  url: &apos;/index&apos;})</code></pre><p>tip: wx.navigateTo 和 wx.redirectTo 不允许跳转到 tabbar 页面，只能用 wx.switchTab 跳转到 tabbar 页面</p><h4 id="5-wx-reLaunch-OBJECT"><a href="#5-wx-reLaunch-OBJECT" class="headerlink" title="5.wx.reLaunch(OBJECT)"></a>5.wx.reLaunch(OBJECT)</h4><p>关闭所有页面，打开到应用内的某个页面。</p><pre><code>wx.reLaunch({  url: &apos;test?id=1&apos;})</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1532581582825&amp;amp;di=eb7eed1f209d0047d30e82810411318e&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fwww.wykj0537.cn%2Fdata%2Fimages%2Fproduct%2F20171215142319_255.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="小程序" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="http://yoursite.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发入门</title>
    <link href="http://yoursite.com/2018/10/18/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2018/10/18/微信小程序开发入门/</id>
    <published>2018-10-18T00:50:18.192Z</published>
    <updated>2018-11-12T03:28:03.361Z</updated>
    
    <content type="html"><![CDATA[<p>报名参加了上海图书馆组织的开放数据竞赛，目标就是由上图和其他机构提供的数据更好的利用。提供的大多数据都以结构化的关联数据形式组织，考虑到刚刚接触实践开发，且没有完整的开发团队，因此选择微信小程序的一个数据应用模式。</p><p>小程序是一种不需要下载安装即可使用的应用，它实现了应用“触手可及”的梦想，用户扫一扫或者搜一下即可打开应用。也体现了“用完即走”的理念，用户不用关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无需安装卸载。对于开发者而言，小程序开发门槛相对较低，难度不及APP，能够满足简单的基础应用，适合生活服务类线下商铺以及非刚需低频应用的转换。小程序能够实现消息通知、线下扫<br>码、公众号关联等七大功能。其中，通过公众号关联，用户可以实现公众号与小程序之间相互跳转。<br><a id="more"></a></p><h3 id="小程序基本概念"><a href="#小程序基本概念" class="headerlink" title="小程序基本概念"></a>小程序基本概念</h3><h4 id="1-申请账号"><a href="#1-申请账号" class="headerlink" title="1.申请账号"></a>1.申请账号</h4><p>点击 <a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1" target="_blank" rel="noopener">https://mp.weixin.qq.com/wxopen/waregister?action=step1</a> 根据指引填写信息和提交相应的资料，就可以拥有自己的小程序帐号。<br>登录主界面即可以看到自己的AppID，在开发项目的时候需要绑定，才可以执行某些操作。</p><h4 id="2-下载开发工具"><a href="#2-下载开发工具" class="headerlink" title="2.下载开发工具"></a>2.下载开发工具</h4><p>微信小程序开发工具已经很完善了，持续保持更新。有win32、64和mac版本。登录之后，窗口包括模拟器、编辑器和调试器三部分内容。</p><h4 id="3-配置结构"><a href="#3-配置结构" class="headerlink" title="3.配置结构"></a>3.配置结构</h4><p>在建立项目的时候，可以选择快速模板，从目录结构可以看到小程序的配置内容。</p><p>app.json 是对当前小程序的全局配置，包括了小程序的所有页面路径、界面表现、网络超时时间、底部 tab 等。<br>1.pages字段 —— 用于描述当前小程序所有页面路径，这是为了让微信客户端知道当前你的小程序页面定义在哪个目录。<br>2.window字段 —— 小程序所有页面的顶部背景颜色，文字颜色定义在这里的。</p><p>小程序开发者工具在每个项目的根目录都会生成一个 project.config.json，你在工具上做的任何配置都会写入到这个文件，当你重新安装工具或者换电脑工作时，你只要载入同一个项目的代码包，开发者工具就自动会帮你恢复到当时你开发项目时的个性化配置，其中会包括编辑器的颜色、代码上传时自动压缩等等一系列选项。</p><p>page.json 其实用来表示 pages/logs 目录下的 logs.json 这类和小程序页面相关的配置。</p><p>网页编程还是基于HTML + CSS + JS 这样的组合，其中 HTML 是用来描述当前这个页面的结构，CSS 用来描述页面的样子，JS 通常是用来处理这个页面和用户的交互。其中，从名字来看，小程序与之对应，功能一致，而且很多语法都基本类似。其中 WXML 充当的就是类似 HTML 的角色，由标签和属性共同组成页面的内容布局。WXSS相当于CSS的功能，可以更改内容的样式。JS即JAVASCRIPT语言，实现逻辑交互功能。</p><h4 id="4-基础开发"><a href="#4-基础开发" class="headerlink" title="4.基础开发"></a>4.基础开发</h4><p>在了解了HTML、CSS和JAVASCRIPT和小程序开发配置结构的基础上，就可以开发自己的第一个小程序了。基础的学习内容可以在W3C中学习了解，上手也会较为轻松。<a href="http://www.w3school.com.cn/h.asp" title="w3cschool" target="_blank" rel="noopener">http://www.w3school.com.cn/h.asp</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;报名参加了上海图书馆组织的开放数据竞赛，目标就是由上图和其他机构提供的数据更好的利用。提供的大多数据都以结构化的关联数据形式组织，考虑到刚刚接触实践开发，且没有完整的开发团队，因此选择微信小程序的一个数据应用模式。&lt;/p&gt;
&lt;p&gt;小程序是一种不需要下载安装即可使用的应用，它实现了应用“触手可及”的梦想，用户扫一扫或者搜一下即可打开应用。也体现了“用完即走”的理念，用户不用关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无需安装卸载。对于开发者而言，小程序开发门槛相对较低，难度不及APP，能够满足简单的基础应用，适合生活服务类线下商铺以及非刚需低频应用的转换。小程序能够实现消息通知、线下扫&lt;br&gt;码、公众号关联等七大功能。其中，通过公众号关联，用户可以实现公众号与小程序之间相互跳转。&lt;br&gt;
    
    </summary>
    
      <category term="小程序" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="http://yoursite.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>区块链微解读</title>
    <link href="http://yoursite.com/2018/10/18/%E5%8C%BA%E5%9D%97%E9%93%BE%E8%A7%A3%E8%AF%BB/"/>
    <id>http://yoursite.com/2018/10/18/区块链解读/</id>
    <published>2018-10-18T00:50:18.191Z</published>
    <updated>2018-11-12T03:28:15.120Z</updated>
    
    <content type="html"><![CDATA[<p>BLOCKCHAIN TECHNOLOGY，区块链技术。</p><h3 id="1-区块链来源"><a href="#1-区块链来源" class="headerlink" title="1.区块链来源"></a>1.区块链来源</h3><blockquote><p>2008年10月，在密码朋克社区论坛中，中本聪发表了一篇名为《比特币：一种点对点式的电子现金系统》的白皮书，以类似论文的格式提出了一种新的模式的电子现金系统。中本聪真实身份未知，据信持有约一百万个比特币。从发表论文以来，中本聪的真实身份长期不为外界所知，维基解密创始人朱利安•阿桑奇（Julian Assange）宣称中本聪是一位密码朋克（Cypherpunk）。另外，有人称“中本聪是一名无政府主义者，他的初衷并不希望数字加密货币被某国政府或中央银行控制，而是希望其成为全球自由流动、不受政府监管和控制的货币。”<br><a id="more"></a></p></blockquote><blockquote><p>2009年1月3日，他开发出首个实现了比特币算法的客户端程序并进行了首次“采矿”（mining），获得了第一批的50个比特币。这也标志着比特币金融体系的正式诞生。</p><p>2010年12月5日，在维基解密泄露美国外交电报事件期间，比特币社区呼吁维基解密接受比特币捐款以打破金融封锁。中本表示坚决反对，认为比特币还在摇篮中，禁不起冲突和争议。七天后的12月12日，他在比特币论坛中发表了最后一篇文章，提及了最新版本软件中的一些小问题，随后不再露面，电子邮件通讯也逐渐终止。</p></blockquote><h3 id="2-区块链定义"><a href="#2-区块链定义" class="headerlink" title="2.区块链定义"></a>2.区块链定义</h3><blockquote><p>区块链是分布式数据存储、点对点传输、共识机制、加密算法等计算机技术的新型应用模式。所谓共识机制是区块链系统中实现不同节点之间建立信任、获取权益的数学算法。从文章最初的题目可以看到，区块链的核心本质是点对点和电子现金系统。现如今仍然处于信息互联网，而区块链的提出是一场社会变革，会使得信息互联网转向价值互联网。</p></blockquote><blockquote><p>互联网起源于上个世纪的美国。<br>1950年，通信研究者认识到需要允许在不同的计算机用户和通信网络之间进行常规的通信，这促进了分布式网络、包交换、排队理论的研究。</p><p>1969年，ARPA网把美国四所大学连接了起来，被视为互联网的肇始。</p><p>1974年，ARPA的罗伯特•卡恩和斯坦福大学的温登•泽夫提出TCP/IP协议，定义了计算机网络之间传送报文的方法。</p><p>1983年，ARPA网将其网络核心协议由NCP改为TCP/IP协议。这一协议标准成为日后互联网通信协议的最基础的标准。</p><p>随着互联网的商业化，其在通信、信息检索、客户服务等方面的巨大潜力被挖掘出来，使得互联网有了质的飞跃，并最终走向全球化。</p><p>1990年，互联网向广大公众正式开放。</p><p>1991年，蒂姆•博纳斯里在瑞士欧洲核子研究组织创建了HTML、HTTP和最初几个网页，之后两年，开始宣传其万维网项目。</p><p>此后经过约10年，互联网成功地将大多数存量计算机纳入到网络中，同时互联网上出现了越来越多的商业应用。</p></blockquote><p>概而言之，互联网的飞速发展要归功于互联网没有中心化控制，以及互联网协议非私有的特点，使得互联网迅速传递到世界的每一个角落，及大地降低了世界范围内的信息传递成本。</p><blockquote><p>随着传统互联网的快速发展，如何管理大量交易数据，保障交易安全以及如何准确进行身份验证，正确地使用电子签名，保障数据的真实性、完整性和线上交易的高效性等，是当前互联网企业面临的重大问题。</p><p>区块链的诞生，彻底改变了互联网的系统架构模式。</p><p>区块链是在互联网中创造一种机制，这种体系在人们不能互相信任的前提下，还可以从事价值交换的活动，依托其非中心化、去信任化、集体维护、可信数据库等四大优势，从根本上改变现代市场交易的信用体系，降低欺诈风险。</p><p>TCP/IP协议构建了互联网点对点传递的基础，而区块链则能实现价值的点对点传递，真正实现从传统互联网到价值互联网的转变。</p><p>区块链对互联网第二个层次的突破是产业互联网或称工业互联网。现有的互联网是基于人与人之间、人与社会之间的通信关系。区块链与物联网、车联网等技术相结合，能够建立社会与社会、物与物之间的互联互通关系，区块链在这当中可以起到非常关键的设备管理之功能。</p><p>区块链对互联网第三个层次的突破是加密互联网。现有的互联网是完全公开透明的，互联网可以盗取人们几乎所有的数据，这一问题在将来可能达到人们无法接受的程度。而区块链上的加密通信可以有力地保障用户隐私，保障个人数据不被互联网公司无偿获取。</p><p>区块链对互联网第四个层次的突破是分布式与非分布式的互联网。区块链结合了分布式网络的技术，能够去除很多中心或中介。虽然不能彻底去掉中心，但是依然能够在很大程度上解构现有的业态。未来信息社会的非中心化结构，将会与工业社会的中心化结构截然不同。</p><p>可以说，区块链不仅仅孕育新的商业模式，也会给经济社会带来巨大变化，蕴含无限的可能。区块链所指向的未来不只是技术层面上更好的网络系统，还包括了非中心化的全新社会架构。对于未来的非中心化的新时代而言，区块链将是非常重要的基础设施。</p></blockquote><p>总的来说，区块链使得电子现金的交易持有了匿名性，因此最早应用于黑市交易，也就是洗钱。</p><h3 id="3-一些概念的含义"><a href="#3-一些概念的含义" class="headerlink" title="3.一些概念的含义"></a>3.一些概念的含义</h3><h4 id="点对点的交易"><a href="#点对点的交易" class="headerlink" title="点对点的交易"></a>点对点的交易</h4><p>传统的系统架构是C/S结构，客户端请求服务器，继而服务器根据客户端的请求返回相应的内容。而区块链本身是无服务器的，比特币也是相对应的一般等价物，无服务器即各个节点都会存储相同的数据，数据冗余很大，不同的节点通过指针链表的形式彼此链接，类似数据结构中的链表结构，一个节点分为两部分，一部分存储数据，另一部分负责指向相关节点。</p><p>发生交易时，节点会将交易过程广播出去，所有节点都会进行记录，也无需中介干预，通过一定的加密算法即可完成交易过程。保证了不可篡改的可信性，比特币的价位，也像是超主权货币的含义，就像欧元一样，统一全球货币。</p><h4 id="共识机制"><a href="#共识机制" class="headerlink" title="共识机制"></a>共识机制</h4><p>共识机制：所谓“共识机制”，是通过特殊节点的投票，在很短的时间内完成对交易的验证和确认；对一笔交易，如果利益不相干的若干个节点能够达成共识，我们就可以认为全网对此也能够达成共识。再通俗一点来讲，如果中国一名微博大V、美国一名虚拟币玩家、一名非洲留学生和一名欧洲旅行者互不相识，但他们都一致认为你是个好人，那么基本上就可以断定你这人还不坏。</p><h4 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h4><p>非对称加密：对称加密算法在加密和解密时使用的是同一个秘钥；而非对称加密算法需要两个密钥来进行加密和解密，这两个秘钥是公开密钥（public key，简称公钥）和私有密钥（private key，简称私钥）。</p><h4 id="零知识证明"><a href="#零知识证明" class="headerlink" title="零知识证明"></a>零知识证明</h4><p>零知识证明：它指的是证明者能够在不向验证者提供任何有用的信息的情况下，使验证者相信某个论断是正确的。零知识证明实质上是一种涉及两方或更多方的协议，即两方或更多方完成一项任务所需采取的一系列步骤。证明者向验证者证明并使其相信自己知道或拥有某一消息，但证明过程不能向验证者泄漏任何关于被证明消息的信息。大量事实证明，零知识证明在密码学中非常有用。如果能够将零知识证明用于验证，将可以有效解决许多问题。</p><h4 id="交易产生的账户"><a href="#交易产生的账户" class="headerlink" title="交易产生的账户"></a>交易产生的账户</h4><p>与传统的交易过程区别的还有一点，就是比特币每次交易会产生一个新的账户，即A账户原先有50个币，预计向B账户交易20个币，那么发起交易过程后，A账户会将50个币全部转出，向B账户转入20个币，新建一个账户C放入剩余的30个币，即产生一个新的节点，原先的A账户会删掉，这样做的好处即每人会有一个账户，无需管理多余停滞的账户。</p><h3 id="4-区块链带来的变革"><a href="#4-区块链带来的变革" class="headerlink" title="4.区块链带来的变革"></a>4.区块链带来的变革</h3><p>人工智能改变生产力；<br>大数据改变生产资料；<br>区块链改变的是生产关系。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BLOCKCHAIN TECHNOLOGY，区块链技术。&lt;/p&gt;
&lt;h3 id=&quot;1-区块链来源&quot;&gt;&lt;a href=&quot;#1-区块链来源&quot; class=&quot;headerlink&quot; title=&quot;1.区块链来源&quot;&gt;&lt;/a&gt;1.区块链来源&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;2008年10月，在密码朋克社区论坛中，中本聪发表了一篇名为《比特币：一种点对点式的电子现金系统》的白皮书，以类似论文的格式提出了一种新的模式的电子现金系统。中本聪真实身份未知，据信持有约一百万个比特币。从发表论文以来，中本聪的真实身份长期不为外界所知，维基解密创始人朱利安•阿桑奇（Julian Assange）宣称中本聪是一位密码朋克（Cypherpunk）。另外，有人称“中本聪是一名无政府主义者，他的初衷并不希望数字加密货币被某国政府或中央银行控制，而是希望其成为全球自由流动、不受政府监管和控制的货币。”&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="区块链" scheme="http://yoursite.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>July</title>
    <link href="http://yoursite.com/2018/10/18/%E4%B8%83%E6%9C%88/"/>
    <id>http://yoursite.com/2018/10/18/七月/</id>
    <published>2018-10-18T00:50:18.189Z</published>
    <updated>2018-07-23T01:27:31.136Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.netbian.com/file/2018/0702/3e9f5ba65d639e490c5032fe94b2423f.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://img.netbian.com/file/2018/0702/3e9f5ba65d639e490c5032fe94b2423f.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SPARQL查询语言</title>
    <link href="http://yoursite.com/2018/10/18/sparql/"/>
    <id>http://yoursite.com/2018/10/18/sparql/</id>
    <published>2018-10-18T00:50:18.187Z</published>
    <updated>2018-11-12T03:28:33.069Z</updated>
    
    <content type="html"><![CDATA[<p>SPARQL的查询是基于结构化知识的，变无序数据为有序知识，让计算机理解Web信息，即语义Web。现如今，语义网适用于各个领域，包括语义出版、语义知识库等。SPARQL是针对以RDF框架进行存储的知识库进行检索的SQL语句，因此有一定SQL基础的话，学习会很容易。</p><p>什么是语义网？</p><p>语义网是一种使用可以被计算机理解的方式描述事物的网络。<br><a id="more"></a><br>林俊杰是著名歌手。<br>小酒窝是林俊杰唱的。<br>林俊杰也是演员。<br>像这样的句子可以被人类理解。但是如何能够被计算机理解呢？</p><p>陈述是由语法规则构建的。一门语言的语法定义了构建该语言的陈述所需的规则。</p><p>这就是语义网的本质所在 - 以计算机应用程序可以理解的方式描述事物。</p><p>语义网和网页之间的链接没有关系。</p><p>语义网描述的是事物之间的关系（比方说 A 是 B 的一部分，而 Y 是 Z 的成员）以及事物的属性（例如尺寸、重量、使用期限和价格等等）。</p><p>资源描述框架</p><p>RDF(资源描述框架，Resource Description Framework)是一种用于描述网络上的信息和资源的的标记语言。</p><p>将信息至于 RDF 文件之中，这样的话，这些信息就有可能被计算机程序（”web spiders”）从网络中搜索、发现、摄取、筛选、分析和处理。</p><p>语义网使用 RDF 来描述网络资源。</p><p>如果希望学习更多关于 RDF 的知识，请参考 <a href="http://www.w3school.com.cn/rdf/index.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/rdf/index.asp</a> 。</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>当信息被表示为RDF后，出于推理和应用开发的需要，我们需要能够存取其中的部分。也就是需要叫做SPARQL的语言，它能够让我们通过选择、抽取等方式很容易地从被表示为RDF的知识中获得特定的部分。SPARQL是专为RDF设计的，适合并依赖于万维网上的各种技术。</p><p>SPARQL基础设施：</p><p>想要执行一条SPARQL查询，就需要一个能执行查询的软件。能做到这一点的最常用的软件叫做三元组存储库。本质上，一个三元组存储库就是一个RDF的数据库。在网上可以下载到很多三元组存储库。在SPARQL的相关规范中，三元组存储库也称为图存储库。 在查询一个三元组存储库之前，需要先向其中填充RDF数据。大部分三元组存储库都提供批量上传的选项。也有一种称为SPARQL更新的机制，提供了一系列向三元组存储库中插入、加载及删除RDF的选项。</p><h2 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a>匹配模式</h2><p>###简单的查询</p><pre><code>Data:        &lt;http://example.org/book/book1&gt;        &lt;http://purl.org/dc/elements/1.1/title&gt;    &quot;SPARQL Tutorial&quot; .Query:    SELECT ?title     WHERE { &lt;http://example.org/book/book1&gt;                &lt;http://purl.org/dc/elements/1.1/title&gt;         ?title . }Result:Title        SPARQL Tutorial</code></pre><p>例如，要在这段数据中做一个查询。找到这本书的书名。</p><p>在SPARQL中，我们可以将三元组中的任何一个元素替换为一个变量。变量的首字符是一个？（问号）。要引入一个变量表示所要查询的位置。</p><p>三元组存储库将接收这个图模式并尝试去找到能够匹配这个模式的那些三元组集合。因此找到了主谓一致的三元组。并返回它的宾语。</p><p>如这个例子中，Data中有一个三元组，在构建查询的时候，利用select关键词构造主语和谓语，宾语作为变量返回，系统会根据查询式构造一个三元组图模式与RDF库中的所有三元组进行匹配，将满足条件的结果返回。</p><h3 id="多个匹配"><a href="#多个匹配" class="headerlink" title="多个匹配"></a>多个匹配</h3><pre><code>Data:@prefix foaf: &lt;http://xmlns.com/foaf/0.1/&gt; ._:a foaf:name &quot;Johnny Lee Outlaw&quot; . _:a foaf:mbox &lt;mailto:jlow@example.com&gt; . _:b foaf:name &quot;Peter Goodguy&quot; ._:b foaf:mbox &lt;mailto:peter@example.org&gt; ._:c foaf:mbox &lt;mailto:carol@example.org&gt;.Query:PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt; SELECT  ?name  ?mbox WHERE { ?x foaf:name ?name .     ?x foaf:mbox ?mbox }</code></pre><p>与turtle类似，PREFIX关键词指明各种各种URL的缩写。返回的结果中，每一格表示一个结果。</p><p>Data中的_:a _:b _:c是空白节点，没有具体意义，且字母不固定，只是用来区分不同的实体资源。</p><h3 id="条件限制"><a href="#条件限制" class="headerlink" title="条件限制"></a>条件限制</h3><p>如果上述的简单查询不能满足查询需求，则需要对查询的结果进行一定的条件限制，常用的限制字段主要为：filter、optinal、union。</p><p>Filter：限制数字或字符串符合一定要求的结果。数值型数据类型（即整数型、小数）和日期/时间都支持小于、大于和等于运算。</p><p>Optional关键词告诉三元组存储库为特定的图模式返回结果——如果能找到。即对于待返回的查询而言，这个图模式未必要满足。</p><p>UNION关键词告诉三元组存储库返回那些仅匹配一个图模式或两个都匹配的结果。</p><p>通过例子来进行学习：</p><pre><code>Data：@prefix dc:&lt;http://purl.org/dc/elements/1.1/&gt; . @prefix : &lt;http://example.org/book/&gt; . @prefix ns: &lt;http://example.org/ns#&gt; .:book1   dc:title   &quot;SPARQL Tutorial&quot; . :book1   ns:price   42 . :book2   dc:title   &quot;The Semantic Web&quot; . :book2   ns:price   23 .Query:PREFIX dc: &lt;http://purl.org/dc/elements/1.1/&gt; PREFIX ns: &lt;http://example.org/ns#&gt; SELECT ?title ?price WHERE {  ?x  ns:price  ?price .      FILTER (?price &lt; 30)      ?x  dc:title  ?title . }</code></pre><p>可以看到，filter字段通过对price的限制，筛选出了price小于30的所有实体，并返回title和price。</p><pre><code>Data：@prefix dc: &lt;http://purl.org/dc/elements/1.1/&gt; . @prefix : &lt;http://example.org/book/&gt; . @prefix ns: &lt;http://example.org/ns#&gt; .:book1   dc:title   &quot;SPARQL Tutorial&quot; . :book1   ns:price   42 . :book2   dc:title   &quot;The Semantic Web&quot; . :book2   ns:price   23 .Query1:PREFIX dc: &lt;http://purl.org/dc/elements/1.1/&gt; SELECT ?title WHERE { ?x dc:title ?title         FILTER regex(?title, &quot;^SPARQL&quot;)     }Query2:PREFIX dc: &lt;http://purl.org/dc/elements/1.1/&gt; SELECT ?title WHERE { ?x dc:title ?title      FILTER regex(?title, &quot;web&quot;, &quot;i&quot; ) }</code></pre><p>filter字段不仅可以对数字进行限制，还可以利用正则表达式进行对字符串的限制，filter加上regex，括号中表明变量?title，字符串str，即过滤出变量包含str的实体，str前面加^即表示以str开头，否则默认为包含有。</p><p>OPTIONAL表示有则返回，没有则返回空。UNION表示满足任一即返回，相当于布尔逻辑中的OR。</p><h2 id="组织结果集"><a href="#组织结果集" class="headerlink" title="组织结果集"></a>组织结果集</h2><p>我们想要查询结果以一种特定的方式返回：分组的、计数的或排序的。SPARQL支持一些函数来帮助我们组织结果集。</p><p>Order: put the solutions in order</p><p>Distinct: ensure solutions in the sequence are unique　　</p><p>Reduced: permit elimination of some non-unique solutions　　</p><p>Offset: control where the solutions start from in the overall sequence of solutions　　</p><p>Limit: restrict the number of solutions</p><p>在更大的数据集上，我们可能不知道有多少条结果，或者我们的查询会不会返回整个数据集。因此，一个好的做法就是限制一条查询能返回的答案的数量。就是LIMIT关键词。</p><pre><code>Query:PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt; SELECT  ?name WHERE { ?x foaf:name ?name } LIMIT 20  //限制返回结果为20条Data:@prefix foaf: &lt;http://xmlns.com/foaf/0.1/&gt; . _:x foaf:name &quot;Alice&quot; . _:x foaf:mbox &lt;mailto:alice@example.com&gt; . _:y foaf:name &quot;Alice&quot; ._:y foaf:mbox &lt;mailto:asmith@example.com&gt; ._:z foaf:name &quot;Alice&quot; . _:z foaf:mbox &lt;mailto:alice.smith@example.com&gt; .Query:PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;        SELECT ?name WHERE { ?x  foaf:name ?name }Query:PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;        SELECT DISTINCT ?name  WHERE { ?x  foaf:name ?name }</code></pre><p> DISTINCT关键字，可以保证结果唯一，REDUCED会对重复的结果进行适当的减少，不同的情况用不同的限制。</p><p>在SPARQL中，使用ORDER BY关键词来对返回的结果集排序。例如，按公寓所含卧室数量进行排序。</p><p>DESC关键词指明了按降序排列。ASC指的是升序。</p><p>此外，字符串得排序是根据字典序。</p><h2 id="查询方式"><a href="#查询方式" class="headerlink" title="查询方式"></a>查询方式</h2><p>SPARQL有四种查询形式。</p><p>SELECT：在查询匹配模式中，返回所有的，或者部分子集。</p><p>CONSTRUCT：通过取代三元组中的变量，返回一个新RDF图模式。</p><p>ASK：返回一个布尔值，显示是否有匹配项。</p><p>DESCRIBE：返回一个表述资源的RDF图模式。</p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p> sparql的使用方式主要为两种，一种是网页知识库提供的查询端口，例如wikidata中提供的query service，在不同的知识库中有不同的词表属性，对不同的实体和属性有不同的ID号，需要另外学习，但是基本的语法基本一样，看几个例子便可以使用；第二种是利用Jena包编写代码进行自定义查询，当然还有很多工具平台也提供了sparql端口，例如D2RQ，但是它的底层实现也是基于Jena实现对于RDF的解析和可视化。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SPARQL的查询是基于结构化知识的，变无序数据为有序知识，让计算机理解Web信息，即语义Web。现如今，语义网适用于各个领域，包括语义出版、语义知识库等。SPARQL是针对以RDF框架进行存储的知识库进行检索的SQL语句，因此有一定SQL基础的话，学习会很容易。&lt;/p&gt;
&lt;p&gt;什么是语义网？&lt;/p&gt;
&lt;p&gt;语义网是一种使用可以被计算机理解的方式描述事物的网络。&lt;br&gt;
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoursite.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="语义网 sparql" scheme="http://yoursite.com/tags/%E8%AF%AD%E4%B9%89%E7%BD%91-sparql/"/>
    
  </entry>
  
  <entry>
    <title>Python反射机制</title>
    <link href="http://yoursite.com/2018/10/18/python%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2018/10/18/python反射机制/</id>
    <published>2018-10-18T00:50:18.186Z</published>
    <updated>2018-11-12T03:28:56.174Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>一个模块有变量、方法，如果我们在另一个模块中调用的时候会用到import。如果一开始不确定要导入的模块，如何通过手动输入模块名来实现功能呢？反射解决的就是这个问题，通过字符串的形式，导入模块；通过字符串的形式，去模块中寻找指定函数（或变量）并执行。</p><pre><code>#test.py:def f1():    print(&quot;F1&quot;)def f2():    print(&quot;F2&quot;)i = 5</code></pre><a id="more"></a><p>使用import调用test中的方法和变量</p><pre><code>import test as funfun.f1()fun.f2()print(fun.i)</code></pre><p>使用<strong>import</strong>()方法可以实现接受动态输入模块名，随时动态的导入模块。(<strong>import</strong>可以导入字符串形式的模块)</p><pre><code>inp = input(&quot;请输入要导入的模块名&quot;) #获取输入的模块名，得到为字符串fun = __import__(inp)        #利用__import__函数获取字符串格式的模块fun.f1()     #执行f1方法</code></pre><p>当然，针对函数也可以进行动态调用，利用getattr(模块名，函数名)</p><pre><code>inp = input(&quot;请输入要导入的模块名&quot;)fun = __import__(inp)inp_fun = input(&quot;请输入要执行的函数名&quot;)f = getattr(fun,inp_fun)f()</code></pre><h2 id="2-反射机制"><a href="#2-反射机制" class="headerlink" title="2.反射机制"></a>2.反射机制</h2><p>除了上面介绍的导入模块，调用函数和变量外，还可以利用字符串形式操作模块、对象中的成员，包括查找、获取、删除、添加等。</p><pre><code>1. getattr(object, name)说明：导入模块并获取方法2. hasattr(object, name)说明：判断对象object是否包含名为name的特性（hasattr是通过调用getattr(ojbect, name)是否抛出异常来实现的）3. setattr(object, name, value)这是相对应的getattr()。参数是一个对象,一个字符串和一个任意值。字符串可能会列出一个现有的属性或一个新的属性。这个函数将值赋给属性的。该对象允许它提供。例如,setattr(x,“foobar”,123)相当于x.foobar = 123。4. delattr(object, name)与setattr()相关的一组函数。参数是由一个对象(记住python中一切皆是对象)和一个字符串组成的。string参数必须是对象属性名之一。该函数删除该obj的一个由string指定的属性。delattr(x, &apos;foobar&apos;)=del x.foobar</code></pre><h2 id="3-Web实例"><a href="#3-Web实例" class="headerlink" title="3.Web实例"></a>3.Web实例</h2><p>考虑浏览器的页面跳转问题，根据用户输入的不同url，返回不同的页面内容，也就是一个url路由器功能，相同的思路是web框架的核心部件之一。</p><p>####首先是一个commons模块####<br>    def login():<br>      print(“这是一个登陆页面！”)</p><pre><code>def logout():  print(&quot;这是一个退出页面！&quot;)def home():  print(&quot;这是网站主页面！&quot;)</code></pre><p>####其次是一个visit模块####<br>    import commons</p><pre><code>def run():  inp = input(&quot;请输入您想访问页面的url： &quot;).strip()  if inp == &quot;login&quot;:    commons.login()  elif inp == &quot;logout&quot;:    commons.logout()  elif inp == &quot;home&quot;:    commons.home()  else:    print(&quot;404&quot;)if __name__ == &apos;__main__&apos;:  run()</code></pre><p>这就实现了一个简单的web路由功能，根据不同的url，执行不同的函数，对应到浏览器就是返回不同的页面内容。这仅仅是三个函数功能，那么如果有几百个几千个不同的方法，是不可能全部if-else进行编写的，因此可以利用getattr()方法获取函数名，在继而判断是否存在此函数。</p><pre><code>import commonsdef run():  inp = input(&quot;请输入您想访问页面的url： &quot;).strip()  if hasattr(commons,inp):    func = getattr(commons,inp)    func()  else:    print(&quot;404&quot;)if __name__ == &apos;__main__&apos;:  run()</code></pre><p>总结：反射即如何利用字符串执行不同的事件，比如导入模块，执行方法，查找变量，这些都是python的反射机制，是一种编程方法、设计模式，所以在java、c#中也有类似的功能实现，理解了运作模式和思路，实现都是比较好做的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;一个模块有变量、方法，如果我们在另一个模块中调用的时候会用到import。如果一开始不确定要导入的模块，如何通过手动输入模块名来实现功能呢？反射解决的就是这个问题，通过字符串的形式，导入模块；通过字符串的形式，去模块中寻找指定函数（或变量）并执行。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#test.py:
def f1():
    print(&amp;quot;F1&amp;quot;)
def f2():
    print(&amp;quot;F2&amp;quot;)

i = 5
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python 反射" scheme="http://yoursite.com/tags/python-%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>python入门练习题</title>
    <link href="http://yoursite.com/2018/10/18/python1/"/>
    <id>http://yoursite.com/2018/10/18/python1/</id>
    <published>2018-10-18T00:50:18.184Z</published>
    <updated>2018-11-12T03:29:11.618Z</updated>
    
    <content type="html"><![CDATA[<p>###1、使用while循环输入 1 2 3 4 5 6 8 9 10</p><pre><code>num = 1while num&lt;=10:if num ==7:    num += 1    continueprint(num)num += 1</code></pre><a id="more"></a><p>###2、求1-100的所有数的和<br>    num = 1<br>    sum = 0<br>    while num&lt;=100:<br>    sum += num<br>    num += 1<br>    print(sum)</p><p>###3、输出 1-100 内的所有奇数<br>    num = 1<br>    while num&lt;=100:<br>    if num%2 ==0:<br>        num += 1<br>        continue<br>    print(num)<br>    num +=1</p><p>###4、求1-2+3-4+5 … 99的所有数的和<br>    num = 1<br>    sum = 0<br>    while num&lt;=100:<br>    if num%2 ==0:<br>        sum += num<br>    else:<br>        sum -= num<br>        num +=1<br>    print(sum)</p><p>###5.用户登陆（三次机会重试）<br>    count = 0<br>    while True:<br>    usrname = input(“usrname&gt;&gt;&gt;”)<br>    password = input(“password&gt;&gt;&gt;”)<br>    if usrname == “zaoyufeifei” and password ==”123456”:<br>        print(“enter ok”)<br>        break<br>    else:<br>        print(“usrname or password false,please again”)<br>        count +=1<br>        if count==3:<br>            print(“3 times over,you are false”)<br>            break<br>        continue</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###1、使用while循环输入 1 2 3 4 5 6 8 9 10&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;num = 1
while num&amp;lt;=10:
if num ==7:
    num += 1
    continue
print(num)
num += 1
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Markdown基础语法</title>
    <link href="http://yoursite.com/2018/10/18/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/10/18/markdown基本语法/</id>
    <published>2018-10-18T00:50:18.182Z</published>
    <updated>2018-11-12T03:29:15.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>接触Hexo个人博客站点后，肯定得学习和了解Markdown的基础使用。Markdown正是使网络发布更加方便的语言。相比于HTML，它的种类很少，我认为Markdown并不是说要网络书写更加方便，因为HTML的结构和内容设计已经很方便了，Markdown抛却标签的内容，让作者的重点放在内容分析和处理上。而且便于之后内容的更改和解析。需要了解的是，Markdown中兼容HTML语法，因此有些标签和使用习惯可以代入使用。<br><a id="more"></a></p><h2 id="2-区块元素"><a href="#2-区块元素" class="headerlink" title="2.区块元素"></a>2.区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>两个以上的空格即可实现段落换行，也就是&lt;br/&gt;标签的作用</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>可以使用###号来表示标题1-6，当然在markdown编辑器下，可以在insert中插入heading</p><pre><code># H1 ### H2 ##### H3 ####### H4 ######### H5 ########### H6 ######</code></pre><h3 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h3><p>用&gt;符号即可，例：</p><blockquote><p>引用内容块</p></blockquote><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>在markdown编辑器可以直接选择insert,有序和无序列表。与HTML类似。</p><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>在Markdown中使用代码块，可以用四个空格或是一个制表符表示。或者通过code直接插入代码块。</p><pre><code>code内容 //需要注意的是在使用的时候，要使用双回车来隔开上一段文字内容</code></pre><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>分割线样式多样，使用简单，例如：</p><pre><code>* * *********- - ----------------------------------------</code></pre><h2 id="3-区段元素"><a href="#3-区段元素" class="headerlink" title="3.区段元素"></a>3.区段元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>在Markdown编辑器中找到链接的按钮或是Ctrl+L，可以设置链接网址。也可以通过行内链接来表示。</p><pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>[ ]中表示链接的点击位置，（ ）内表示链接网址，“ ”内是链接的名称，即鼠标放上去显示的内容。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><pre><code>用*号括起来表示弱强调，双**号括起来表示强掉当然也可以用于标记代码段</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code></pre><p>！ 开头，表示图片内容，[ ]号内容表示替代文字；（ ）表示图片链接。markdown提供UI窗口执行插入图片的操作。</p><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><h3 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h3><p>-Markdown 免费编辑器</p><h3 id="Linux-平台"><a href="#Linux-平台" class="headerlink" title="Linux 平台"></a>Linux 平台</h3><p>-MarkdownPad</p><p>-MarkPad</p><p>###-Mac 平台###</p><p>-ReText</p><h3 id="在线编辑器"><a href="#在线编辑器" class="headerlink" title="在线编辑器"></a>在线编辑器</h3><p>-Mou</p><h3 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>-Markable.in</p><p>-Dillinger.io</p><p>-MaDe (Chrome)</p><p>-Sublime Text 2</p><p>-MarkdownEditing</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.概述&quot;&gt;&lt;/a&gt;1.概述&lt;/h2&gt;&lt;p&gt;接触Hexo个人博客站点后，肯定得学习和了解Markdown的基础使用。Markdown正是使网络发布更加方便的语言。相比于HTML，它的种类很少，我认为Markdown并不是说要网络书写更加方便，因为HTML的结构和内容设计已经很方便了，Markdown抛却标签的内容，让作者的重点放在内容分析和处理上。而且便于之后内容的更改和解析。需要了解的是，Markdown中兼容HTML语法，因此有些标签和使用习惯可以代入使用。&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Lucene实现索引和查询</title>
    <link href="http://yoursite.com/2018/10/18/Lucene/"/>
    <id>http://yoursite.com/2018/10/18/Lucene/</id>
    <published>2018-10-18T00:50:18.180Z</published>
    <updated>2018-11-12T03:29:21.318Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-引言"><a href="#1-引言" class="headerlink" title="1.引言"></a>1.引言</h3><p>随着万维网的发展和大数据时代的到来，每天都有大量的数字化信息在生产、存储、传递和转化，如何从大量的信息中以一定的方式找到满足自己需求的信息，使之有序化并加以利用成为一大难题。全文检索技术是现如今最普遍的信息查询应用，生活中利用搜索引擎，在博客论坛中查找信息，这些搜索的核心原理就是本文要实现的全文检索技术。随着文档信息数字化的实现，将信息有效存储并及时准确的提取是每一个公司、企业和单位要做好的基础。针对英文的全文检索已经有很多成熟的理论和方法，开放源代码的全文检索引擎Lucene 是Apache 软件基金会Jakarta 项目组的一个子项目，它的目的是为软件开发人员提供一个简单易用的工具包，方便在目标系统中实现全文检索的功能。Lucene不支持中文，但是目前已有很多开源的中文分词器可以对中文内容进行索引，本文在研究Lucene核心原理的基础上，分别实现了对中英文网页的爬取和检索。</p><a id="more"></a><h3 id="2-Lucene介绍"><a href="#2-Lucene介绍" class="headerlink" title="2.Lucene介绍"></a>2.Lucene介绍</h3><h4 id="2-1-lucene-简介"><a href="#2-1-lucene-简介" class="headerlink" title="2.1 lucene 简介"></a>2.1 lucene 简介</h4><p>Lucene是一个用Java写的全文检索引擎工具包，实现构造了索引和搜索两大核心功能，并且两者相互独立，这使得开发人员可以方便扩展，Lucene提供了丰富的API , 可以与存储在索引中的信息方便的交互。需要说明的是它并不是一个完整的全文检索应用, 而是为应用程序提供索引和搜索功能。即若想让Lucene 真正起作用, 还需在其基础上做一些必要的二次开发。</p><p>Lucene的结构设计与数据库的设计较为相似，但Lucene的索引与数据库有着极大的不同。数据库和Lucene建立索引都是为了查找方便，但是数据库仅仅针对部分字段进行建立，且需要把数据转化为格式化信息，并予以保存。而全文检索是将全部信息按照一定方式进行索引。两种检索的不同和相似如表1-1所示。</p><p><center> 表1-1：数据库检索与Lucene检索对比 </center><br><img src="https://i.imgur.com/uwQlJb1.png" alt=""></p><h4 id="2-2-lucene总体结构"><a href="#2-2-lucene总体结构" class="headerlink" title="2.2 lucene总体结构"></a>2.2 lucene总体结构</h4><p>Lucene软件包的发布形式是一个JAR文件，版本更新较快且版本差距较大，本文使用的是5.3.1的版本，主要使用的子包如表1-2所示。</p><p><img src="https://i.imgur.com/6yt7AkR.png" alt=""></p><h4 id="2-3-lucene架构设计"><a href="#2-3-lucene架构设计" class="headerlink" title="2.3 lucene架构设计"></a>2.3 lucene架构设计</h4><p>Lucene功能非常强大，但从根本上来说，主要包括两块：一是从文本内容切分词后索引入库；二是根据查询条件返回结果，即建立索引和进行查询两部分。</p><p>如图1-1所示，本文抛出外部接口以及信息来源，重点对网页爬取的文本内容进行索引和查询 。</p><p><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222172908053-645650924.png" alt=""></p><h3 id="3-JDK的安装和环境变量的配置"><a href="#3-JDK的安装和环境变量的配置" class="headerlink" title="3 JDK的安装和环境变量的配置"></a>3 JDK的安装和环境变量的配置</h3><h4 id="1-jdk的下载："><a href="#1-jdk的下载：" class="headerlink" title="1.jdk的下载："></a>1.jdk的下载：</h4><p>在oracle官网下载符合系统版本的压缩包，网址如下。点击安装，根据提示进行安装，在安装过程中会提示是否安装jre，点击是。　　　　　　　　　　                                               <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><h4 id="2-设置环境变量："><a href="#2-设置环境变量：" class="headerlink" title="2.设置环境变量："></a>2.设置环境变量：</h4><p>（1）右键计算机=》属性=》高级系统设置=》环境变量=》系统变量=》新建=》JAVA_HOME:安装路径</p><p>（2）Path中新增=》%JAVA_HOME%\bin</p><h4 id="3-测试是否成功："><a href="#3-测试是否成功：" class="headerlink" title="3.测试是否成功："></a>3.测试是否成功：</h4><p>　开始=》运行=》CMD  回车 在弹出的 DOS 窗口内</p><p>　输入：java -version 会出现版本信息，</p><p>　输入： javac出现 javac 的用法信息</p><p>　出现如图2-1所示为成功。</p><p><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222172926084-1424216324.png" alt=""></p><h3 id="4-编写Java代码实现对网页内容的获取"><a href="#4-编写Java代码实现对网页内容的获取" class="headerlink" title="4 编写Java代码实现对网页内容的获取"></a>4 编写Java代码实现对网页内容的获取</h3><p>因为Lucene针对不同语言要使用不同的分词器，英文使用标准分词器，中文选择使用smartcn分词器。在获取网页的时候，先获取网页存为html文件，在html中由于标签　          的干扰，会对检索效果产生影响，因此需要对html标签进行剔除，并将文本内容转为txt文件进行保存。中英文除了分词器不同，其他基本一致，因此之后的代码和实验结果演            示会选择任一。本文选取五十篇中文故事和英文故事的网页为例。</p><p>具体代码设计如下图：Url2Html.java将输入网址的网页转存为html文件,Html2Txt.java文件实现html文档标签的去除，转存为txt文档。具体代码如图3-1和3-2。</p><pre><code>public void way(String filePath,String url) throws Exception{    File dest = new File(filePath);//建立文件    InputStream is;//接收字节输入流    FileOutputStream fos = new FileOutputStream(dest);//字节输出流    URL wangzhi = new URL(url);//设定网址URL    is = wangzhi.openStream();    BufferedInputStream bis = new BufferedInputStream(is);//为字节输入流加缓冲    BufferedOutputStream bos = new BufferedOutputStream(fos);//为字节输出流加缓冲    /*     * 对字节进行读取     */    int length;    byte[] bytes = new byte[1024*20];    while((length = bis.read(bytes, 0, bytes.length)) != -1){        fos.write(bytes, 0, length);    }    /*     * 关闭缓冲流和输入输出流     */    bos.close();            fos.close();    bis.close();    is.close();}public String getBody(String val){　　String zyf = val.replaceAll(&quot;&lt;/?[^&gt;]+&gt;&quot;, &quot;&quot;); //剔出&lt;html&gt;的标签　　return zyf;}public void writeTxt(String Str,String writePath) {　　File writename = new File(writePath);　　try {　　　　writename.createNewFile();　　　　BufferedWriter out = new BufferedWriter(new FileWriter(writename));　　　　out.write(Str);　　　　out.flush();　　　　out.close();　　} catch (IOException e) {　　　　e.printStackTrace();　　}}</code></pre><p>以童话故事《笨狼上学》的网页为例，文档路径设为”E:\work \lucene \test \data \html”和”E:\work\lucene\test\data\txt”，在每一次读取网页的时候需要设定的两个参数为文件命名filename和获取目标网址url。新建一个main函数，实现对两个方法的调用。具体实现如图3-3所示：</p><pre><code>　public static void main(String[] args) {　　　　String filename = &quot;jingdizhi&quot;;//文件名字　　　　String url = &quot;http://www.51test.net/show/8072125.html&quot;;//需要爬取的网页url　　　　String filePath = &quot;E:\\work\\lucene\\test\\data\\html\\&quot;+filename+&quot;.html&quot;;//写出html的文件路径+文件名　　　　String writePath = &quot;E:\\work\\lucene\\test\\data\\txt\\&quot;+filename+&quot;.txt&quot;;//写出txt的文件路径+文件名　　　　Url2Html url2html = new Url2Html();　　　　try {　　　　　　url2html.way(filePath,url);　　　　} catch (Exception e) {　　　　　　e.printStackTrace();　　　　}　　　　Html2Txt html2txt = new Html2Txt();　　　　String read=html2txt.readfile(filePath);//读取html文件　　　　String txt = html2txt.getBody(read);//去除html标签　　　　System.out.println(txt);　　　　try {　　　　　　html2txt.writeTxt(txt,writePath);　　　　} catch (Exception e) {　　　　　　e.printStackTrace();　　　　}　　}</code></pre><p>执行程序后，分别在两个文件夹中建立”笨狼上学.html”和”笨狼上学.txt”。</p><h3 id="5-建立索引"><a href="#5-建立索引" class="headerlink" title="5 建立索引"></a>5 建立索引</h3><p>索引和查询的基本原理如下：</p><p>建立索引：搜索引擎的索引其实就是实现“单词-文档矩阵”的具体数据结构。也是进行全文检索的第一步，lucene提供IndexWriter类进行索引的管理，主要包括add()、delete()、update()。还有对权值的设定，通过不同索引权值的设定，可以在搜索的时候根据相关性大小进行返回。</p><p>进行搜索：原本的直接搜索是针对文档进行顺序检索，在建立索引之后，可以通过对索引的查找以找到索引词在文档中出现的位置，然后返回索引项所对的文档中的位置和词。Lucene提供IndexSearcher类进行对文档的检索，检索形式主要分为两类，第一类是Term，针对单个词项的检索；第二类是Parser，可以自定义构造检索表达式，有较多的检索形式，具体的方法会在之后进行实现的演示。</p><h4 id="5-1-实验环境"><a href="#5-1-实验环境" class="headerlink" title="5.1 实验环境"></a>5.1 实验环境</h4><p>本PC机采用windows 10x64系统，8G内存，256G固态硬盘。开发环境为Myeclipse 10，jdk版本为1.8。在实验过程中，因为部分语法的转变，若干Class采用1.6版本实现。</p><h4 id="5-2-建立索引"><a href="#5-2-建立索引" class="headerlink" title="5.2 建立索引"></a>5.2 建立索引</h4><p>建立索引库就是往索引库添加一条条索引记录，Lucene为添加一条索引记录提供了接口，添加索引。</p><p>主要用到了“写索引器”、“文档”、“域”这3 个类。要建立索引，首先要构造一个Document 文档对象，确定Document的各个域，这类似于关系型数据库中表结构的建立，Document相当于表中的一个记录行，域相当于一行中的列，在Lucene 中针对不同域的属性和数据输出的需求，对域还可以选择不同的索引/存储字段规则，在本实验中，文件名fileName、文件路径fullPath和文本内容content作为Document 的域。</p><p>IndexWriter 负责接收新加入的文档，并写入索引库中。在创建“写索引器”IndexWriter 时需要指定所使用的语言分析器。建立索引分为两个类别，第一：不加权索引；第二：加权索引。</p><pre><code>public Indexer(String indexDir)throws Exception{    Directory dir=FSDirectory.open(Paths.get(indexDir));    Analyzer analyzer=new StandardAnalyzer(); // 标准分词器    //SmartChineseAnalyzer analyzer = new SmartChineseAnalyzer();    IndexWriterConfig iwc=new IndexWriterConfig(analyzer);    writer=new IndexWriter(dir, iwc);}</code></pre><p>设置索引字段，Store表示是否对索引内容存储：fileName和fullPath占用内存较少可以进行存储，以方便查询返回。</p><pre><code>private Document getDocument(File f)throws Exception {    Document doc=new Document();    doc.add(new TextField(&quot;contents&quot;, new FileReader(f)));    doc.add(new TextField(&quot;fileName&quot;, f.getName(),Store.YES));    doc.add(new TextField(&quot;fullPath&quot;,f.getCanonicalPath(),Store.YES));//路径索引    return doc;}</code></pre><p>执行主代码后结果如图：设计在索引某个文件的时候返回文件“索引文件：+文件路径”，且计算输出索引全部文件花费的时间。<br><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222174207662-1789750316.png" alt=""></p><h4 id="5-3-对索引的删除和修改"><a href="#5-3-对索引的删除和修改" class="headerlink" title="5.3 对索引的删除和修改"></a>5.3 对索引的删除和修改</h4><p>一般对数据库的操作包括CRUD（增加、删除、更改、查询），增加就是对索引项的选择和建立，查询作为较为核心的功能会在之后展开论述，这里主要记录一下在删除、更新索引时用到的方法。</p><p>删除分为两种类型，包括普通的删除和彻底删除，因为索引的删除影响到整个数据库，而且对于大型的系统而言，删除索引意味着对系统的底层进行更改，耗时耗力而且无法返回，前面索引的时候看到建立索引后生成若干小文件，当进行查找的时候会将各个文件进行合并然后查找。普通删除仅仅是对之前建立的索引做个简单的标记，致使无法进行查找返回。彻底删除则是对索引进行销毁，无法撤销。以删除索引项“id”为1的索引为例：</p><p>普通的删除(在合并前删除)：<br>    writer.deleteDocuments(new Term(“id”,”1”));</p><pre><code>writer.commit();</code></pre><p>彻底的删除（在合并后删除）：</p><pre><code>writer.deleteDocuments(new Term(&quot;id&quot;,&quot;1&quot;));writer.forceMergeDeletes(); // 强制删除writer.commit();</code></pre><p>对索引的修改原理比较简单，就是在原有索引的基础上实现覆盖，实现代码跟上文的增加索引一样，在此不多做阐述。</p><h4 id="5-4-对索引的加权"><a href="#5-4-对索引的加权" class="headerlink" title="5.4 对索引的加权"></a>5.4 对索引的加权</h4><p>Lucene默认按照相关度排序，Lucene对Field提供了一个可以设置的Boosting参数，这个参数用来表示记录的重要性，在满足搜索条件是，会优先考虑重要性高的记录，返回结果靠前，如果记录较多，权值低的记录会排到首页之后，因此，对索引的加权操作是影响返回结果满意度的重要因素，在实际设计信息系统的时候，应该有严格的权值计算公式，方便对Field权值的更改，更好的满足用户的需求。</p><p>例如搜索引擎将点击率高，链入链出的网页给定较高的权重，在返回的时候排到第一页。实现代码如图4-1所示，不加权和加权结果对比如图4-2所示。</p><pre><code>TextField field = new TextField(&quot;fullPath&quot;, f.getCanonicalPath(), Store.YES);if(&quot;A GREAT GRIEF.txt&quot;.equals(f.getName())){    field.setBoost(2.0f);//对文件名为secondry story.txt的fullPath路径加权；}                        //默认权重为1.0，改为1.2即增加权重。doc.add(field);</code></pre><p><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222174418053-1174023608.png" alt=""></p><p><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222174432975-271625841.png" alt=""></p><p><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222174432975-271625841.png" alt=""></p><p>由图结果可以看出，不加权时，按照字典顺序排列返回，因此first在secondry之前，在对secondry命名的文件路径加权后，返回的时候顺序发生变化，实现对权重的测试。</p><h3 id="6-进行查询"><a href="#6-进行查询" class="headerlink" title="6 进行查询"></a>6 进行查询</h3><p>Lucene 的检索接口主要由QueryParser、IndexSearcher、Hits这3 个类构成，QueryParser 是查询解析器，负责解析用户提交的查询关键字，在新建一个解析器时需要指定要解析的域和使用什么语言分析器，这里使用的语言分析器必须与索引库建立时使用的解析器相同，否则查询结果不正确。IndexSearcher是索引搜索器，在实例化IndexSearcher时需要指定索引库所在的目录，IndexSearcher有一个search 方法执行索引的检索，这个方法接受Query 作为参数，返回Hits，Hists 是一系列排好序的查询结果的集合，集合的元素是Document。通过Document的get 方法可以得到与这个文档对应文件的信息，比如：文件名、文件路径、文件内容等。</p><h4 id="6-1-基本查询"><a href="#6-1-基本查询" class="headerlink" title="6.1 基本查询"></a>6.1 基本查询</h4><p>如图查询主要有两种方式，但是推荐使用第一种构造QueryParser表达式，它可以有灵活的组合方式，包括布尔逻辑表达、模糊匹配等，但是第二种Term只能针对词汇查询。</p><p>1.构造QueryParser查询式：</p><pre><code>　QueryParser parser=new QueryParser(&quot;fullPath&quot;, analyzer);Query query=parser.parse(q);</code></pre><p>2.对特定项的查询：</p><pre><code>Term t = new Term(&quot;fileName&quot;, q);Query query = new TermQuery(t);</code></pre><p>查询结果如图5-1所示：以查询文件名fileName包含“大”为例。</p><p><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222174534537-1485277351.png" alt=""></p><h4 id="6-2-模糊查询"><a href="#6-2-模糊查询" class="headerlink" title="6.2 模糊查询"></a>6.2 模糊查询</h4><p>在构造QueryParser时，通过对词项q的修改可以实现精确匹配和模糊匹配。模糊匹配通过在“q”之后加“~”进行修改。如图5-2所示：</p><p><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222174551975-1358372892.png" alt=""></p><h4 id="6-3-限定条件查询"><a href="#6-3-限定条件查询" class="headerlink" title="6.3 限定条件查询"></a>6.3 限定条件查询</h4><p>布尔逻辑查询和模糊查询只需要对查询词q进行更改，而限定条件查询需要对query表达式进行设定，主要分为以下几类：</p><p>分别为指定项范围搜索、指定数字范围、指定字符串开头和多条件查询，分别列出应用的查询，true参数指的：是否包含上限和下限在内。</p><p>指定项范围：</p><pre><code>TermRangeQuery query=new TermRangeQuery(&quot;desc&quot;, new BytesRef(&quot;b&quot;.getBytes()), new BytesRef(&quot;c&quot;.)</code></pre><p>指定数字范围：</p><pre><code>NumericRangeQuery&lt;Integer&gt; query=NumericRangeQuery.newIntRange(&quot;id&quot;, 1, 2, true, true);</code></pre><p>指定字符串开头：</p><pre><code>PrefixQuery query=new PrefixQuery(new Term(&quot;city&quot;,&quot;a&quot;));</code></pre><p>多条件查询：</p><pre><code>NumericRangeQuery&lt;Integer&gt;query1=NumericRangeQuery.newIntRange(&quot;id&quot;, 1, 2, true, true);PrefixQuery query2=new PrefixQuery(new Term(&quot;city&quot;,&quot;a&quot;));BooleanQuery.Builder booleanQuery=new BooleanQuery.Builder();booleanQuery.add(query1,BooleanClause.Occur.MUST);booleanQuery.add(query2,BooleanClause.Occur.MUST);</code></pre><h4 id="6-4-高亮查询"><a href="#6-4-高亮查询" class="headerlink" title="6.4 高亮查询"></a>6.4 高亮查询</h4><p>在百度、谷歌等搜索引擎中，进行查询时，返回的网页包含查询关键字的时候会显示为红色，且进行摘要显示，即对包含关键字的部分内容进行截取并返回。高亮查询即为实现对关键字的样式更改，本实验在myeclipse中进行，返回结果并不会有样式的改变，只会对返回内容的关键字添加html标签，如果显示到网页即产生样式的变化。</p><p>高亮的设置代码如图5-3所示，结果如图5-4所示，会对南京匹配词添加<b>和<font>标签，显示到网页上为加粗和变红。</font></b></p><pre><code>QueryScorer scorer=new QueryScorer(query);Fragmenter fragmenter=new SimpleSpanFragmenter(scorer);SimpleHTMLFormatter simpleHTMLFormatter=new SimpleHTMLFormatter(&quot;&lt;b&gt;&lt;font color=&apos;red&apos;&gt;&quot;,&quot;&lt;/font&gt;&lt;/b&gt;&quot;);Highlighter highlighter=new Highlighter(simpleHTMLFormatter, scorer);highlighter.setTextFragmenter(fragmenter);</code></pre><p><img src="https://images2017.cnblogs.com/blog/1296884/201712/1296884-20171222174732631-475842844.png" alt=""></p><h3 id="7-实验过程中遇到的问题和不足"><a href="#7-实验过程中遇到的问题和不足" class="headerlink" title="7 实验过程中遇到的问题和不足"></a>7 实验过程中遇到的问题和不足</h3><p>LUCENE版本更新较快，在JDK版本、ECLIPSE版本和LUCENE版本之间需要一个良好的衔接，否则会造成很多的不兼容，在调试版本以及JDK1.6和JDK1.8的选择上出现很多困难，比如网页抓取中的APPEND方法在1.8版本已经删除，不能使用。但是对文档路劲的读取FSDIRECTORY.OPEN()则需要JDK1.8才支持。</p><p>本实验的不足之处主要表现在：</p><p>代码的灵活性较低，在爬取网页的时候需要手工进行，且需要对中文和英文分别进行，应该完善代码使得对网页的语言有个判定，然后自动选择执行不同的分词器。</p><p>代码的复用性较低，没有较为合理的分类和方法的构建，为了简便，基本在几个核心代码中进行注释和标记而实现效果，有待改进。</p><p>代码的可移植性较低，对网页的爬取使用的是JDK1.6的版本，LUCENE的实现使用的是JDK1.8的版本，在导出到其他机器上，需要对环境稍加修改和配置，无法实现一键式操作。</p><h3 id="8-总结"><a href="#8-总结" class="headerlink" title="8 总结"></a>8 总结</h3><p>本文从Lucene的原理出发，了解了全文检索的思路和方法，并对常用的功能进行了实验和测试。在实验的过程中，了解了搜索引擎的原理，基于信息检索课程的内容上，有了一个更好的实操体验。Lucene 是一个优秀的开源全文本搜索技术框架，通过对它的深入研究，对其实现机制更加熟悉，在研究它的过程中学习了很多面向对象的编程方法和思想，它良好的系统框架和扩展性值得学习借鉴。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-引言&quot;&gt;&lt;a href=&quot;#1-引言&quot; class=&quot;headerlink&quot; title=&quot;1.引言&quot;&gt;&lt;/a&gt;1.引言&lt;/h3&gt;&lt;p&gt;随着万维网的发展和大数据时代的到来，每天都有大量的数字化信息在生产、存储、传递和转化，如何从大量的信息中以一定的方式找到满足自己需求的信息，使之有序化并加以利用成为一大难题。全文检索技术是现如今最普遍的信息查询应用，生活中利用搜索引擎，在博客论坛中查找信息，这些搜索的核心原理就是本文要实现的全文检索技术。随着文档信息数字化的实现，将信息有效存储并及时准确的提取是每一个公司、企业和单位要做好的基础。针对英文的全文检索已经有很多成熟的理论和方法，开放源代码的全文检索引擎Lucene 是Apache 软件基金会Jakarta 项目组的一个子项目，它的目的是为软件开发人员提供一个简单易用的工具包，方便在目标系统中实现全文检索的功能。Lucene不支持中文，但是目前已有很多开源的中文分词器可以对中文内容进行索引，本文在研究Lucene核心原理的基础上，分别实现了对中英文网页的爬取和检索。&lt;/p&gt;
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoursite.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Lucene、索引、检索" scheme="http://yoursite.com/tags/Lucene%E3%80%81%E7%B4%A2%E5%BC%95%E3%80%81%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>解决微信小程序本地资源无法通过WXSS获取的问题</title>
    <link href="http://yoursite.com/2018/10/18/background-image/"/>
    <id>http://yoursite.com/2018/10/18/background-image/</id>
    <published>2018-10-18T00:50:18.178Z</published>
    <updated>2018-11-12T03:29:25.627Z</updated>
    
    <content type="html"><![CDATA[<p>###<br> 微信开发工具中，本地资源无法通过WXSS获取 </p><pre><code>background-image：//可以使用网络图片，或者base64，或者使用&lt;image/&gt;标签。</code></pre><p>网络图片即在网上右键 → 复制图片地址即可。<br><a id="more"></a><br>转base地址：</p><p><a href="https://www.css-js.com/tools/base64.html" title="文件转base64" target="_blank" rel="noopener">https://www.css-js.com/tools/base64.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###&lt;br&gt; 微信开发工具中，本地资源无法通过WXSS获取 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;background-image：//可以使用网络图片，或者base64，或者使用&amp;lt;image/&amp;gt;标签。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;网络图片即在网上右键 → 复制图片地址即可。&lt;br&gt;
    
    </summary>
    
      <category term="小程序" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序 base64" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F-base64/"/>
    
  </entry>
  
</feed>
